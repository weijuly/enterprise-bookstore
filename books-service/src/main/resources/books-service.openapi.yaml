openapi: 3.0.0
info:
  title: Books Service
  version: 0.0.1
servers:
  - url: http://localhost:8080/
    description: local server
  - url: https://enterprise-bookstore.com/api/
    description: production server
paths:
  /books:
    get:
      description: Search for books
      operationId: searchBooks
      parameters:
        - in: query
          name: title
          description: Part or full title of the book
          schema:
            type: string
          required: false
        - in: query
          name: author
          description: Part or full name of the authors
          schema:
            type: string
          required: false
        - in: query
          name: published_after
          description: Get books that were published after this year
          schema:
            type: integer
          required: false
        - in: query
          name: published_before
          description: Get books that were published before this year
          schema:
            type: integer
          required: false
      responses:
        '200':
          $ref: '#/components/responses/SearchBooks'
        '400':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      description: Add a new book
      operationId: addBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          $ref: '#/components/responses/Book'
        '400':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /books/{id}:
    parameters:
      - in: path
        name: id
        description: id of the book
        schema:
          type: string
        required: true
    get:
      description: Get details about a book
      operationId: getBookById
      responses:
        '200':
          $ref: '#/components/responses/Book'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    patch:
      description: Update details of a book
      operationId: updateBookById
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Patches'
      responses:
        '204':
          description: The book was updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Delete a book
      operationId: deleteBookById
      responses:
        '204':
          description: The book was deleted successfully.
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        isbn:
          type: string
        summary:
          type: string
        published_on:
          type: integer
        pages:
          type: integer
        authors:
          type: array
          items:
            $ref: '#/components/schemas/Author'
        genres:
          type: array
          items:
            type: string
    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        about:
          type: string
        genres:
          type: array
          items:
            type: string
    ProblemDetails:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
        description:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        name:
          type: string
        reason:
          type: string
    Patch:
      type: object
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: object
    Patches:
      type: array
      items:
        $ref: '#/components/schemas/Patch'
    SearchBooks:
      type: object
      properties:
        page:
          type: integer
        total:
          type: integer
        size:
          type: integer
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
  responses:
    Book:
      description: A book
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Book'
    SearchBooks:
      description: Search books results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchBooks'
    NotFound:
      description: The specified resource was not found in the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    BadRequest:
      description: The request is malformed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    InternalServerError:
      description: Something went wrong when processing the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'


